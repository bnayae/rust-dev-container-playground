// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/rust
{
	"name": "Rust-Dev-Container-Playground",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/rust:0-1-bullseye",

	// Use 'mounts' to make the cargo cache persistent in a Docker Volume.
	// "mounts": [
	// 	{
	// 		"source": "devcontainer-cargo-cache-${devcontainerId}",
	// 		"target": "/usr/local/cargo",
	// 		"type": "volume"
	// 	}
	// ]

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		
	},
	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"extensions":[
				"donjayamanne.githistory",
				"mhutchie.git-graph",
				"eamodio.gitlens",
				"GitHub.vscode-pull-request-github",
				"ms-vscode.remote-repositories"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	"postStartCommand": "git config --global --add safe.directory /workspaces/rust-dev-container-playground && git pull",
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "git pull"
	// "postCreateCommand": "git pull; cargo install --locked cargo-outdated"
	// "postCreateCommand": "rustc --version",

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
